print("Hello World!")
2*3
# list files in java_home
system("/usr/libexec/java_home -V")
##Matching Java Virtual Machines (3):
## 1.8.0_162, x86_64: "Java SE 8" /Library/Java/JavaVirtualMachines/jdk1.8.0... ## 1.6.0_65-b14-468, x86_64: "Java SE 6" /Library/Java/JavaVirtualMachines/... ## 1.6.0_65-b14-468, i386: "Java SE 6" /Library/Java/JavaVirtualMachines/1....
# list files in java_home
system("/usr/libexec/java_home -V")
##Matching Java Virtual Machines (3):
## 1.8.0_162, x86_64: "Java SE 8" /Library/Java/JavaVirtualMachines/jdk1.8.0... ## 1.6.0_65-b14-468, x86_64: "Java SE 6" /Library/Java/JavaVirtualMachines/... ## 1.6.0_65-b14-468, i386: "Java SE 6" /Library/Java/JavaVirtualMachines/1....
# see default version of Java
system("java -version")
##java version "1.8.0_162"
##Java(TM) SE Runtime Environment (build 1.8.0_162-b12)
##Java HotSpot(TM) 64-Bit Server VM (build 25.162-b12, mixed mode)
system("sudo R CMD javareconf")
# Set JAVA_HOME
system("export JAVA_HOME=`/usr/libexec/java_home -v 1.8`")
install.packages("rJava")
library("rJava")
# 1. initialize JVM .jinit()
# 2. retrieve the Java-version
.jcall("java/lang/System", "S", "getProperty", "java.version")
library("rJava")
> # 1. initialize JVM .jinit()
>
> # 2. retrieve the Java-version
> .jcall("java/lang/System", "S", "getProperty", "java.version")
# list files in java_home
system("/usr/libexec/java_home -V")
##Matching Java Virtual Machines (3):
## 1.8.0_162, x86_64: "Java SE 8" /Library/Java/JavaVirtualMachines/jdk1.8.0... ## 1.6.0_65-b14-468, x86_64: "Java SE 6" /Library/Java/JavaVirtualMachines/... ## 1.6.0_65-b14-468, i386: "Java SE 6" /Library/Java/JavaVirtualMachines/1....
# see default version of Java
system("java -version")
##java version "1.8.0_162"
##Java(TM) SE Runtime Environment (build 1.8.0_162-b12)
##Java HotSpot(TM) 64-Bit Server VM (build 25.162-b12, mixed mode)
system("sudo R CMD javareconf")
$sudo R CMD javareconf
install.packages("rJava")
install.packages("rJava")
library("rJava")
# 1. initialize JVM .jinit()
library("rJava")
# 1. initialize JVM .jinit()
# 2. retrieve the Java-version
.jcall("java/lang/System", "S", "getProperty", "java.version")
install.packages("rJava", type="source")
install.packages("rJava", type = "source")
library("rJava")
# 1. initialize JVM .jinit()
# 2. retrieve the Java-version
.jcall("java/lang/System", "S", "getProperty", "java.version")
library("tidyverse")
data <- starwars
View(data)
View(data)
name <- c("Mercury", "Venus", "Earth", "Mars", "Jupiter", "Saturn", "Uranus", "Neptune")
type <- c("Terrestrial planet", "Terrestrial planet", "Terrestrial planet",
"Terrestrial planet", "Gas giant", "Gas giant", "Gas giant", 'Gas giant')
diameter <- c(0.382, 0.949, 1, 0.532, 11.209, 9.449, 4.007, 3.883)
rotation <- c(58.64, -243.02, 1, 1.03, 0.41, 0.43, -0.72, 0.67)
rings <- c(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE)
planets_df <- data.frame(name, type, diameter,rotation, rings)
View(planets_df)
View(planets_df)
dataTitanic <- readRDS("/Users/jeannedesrosiers/Desktop/Outils numeriques/data/titanic.rds")
dataTitanic <- readRDS("/Users/jeannedesrosiers/Desktop/Outils numeriques/data/titanic.rds")
mean(dataTitanic$age, na.rm = T)
dataMovie <- readRDS("/Users/jeannedesrosiers/Desktop/Outils numeriques/data/movieData.rds")
index.html
install.packages("pdftools")
library(pdftools)
setwd("/Users/jeannedesrosiers/Desktop/Outils_numeriques/Mini travail recherche/Donnees/COP")
pdf_files <- list.files(pattern = "\\.pdf$", full.names = TRUE)
print(pdf_files)
# Initialize an empty list to store text from each PDF
pdf_texts <- list()
# Loop through each PDF file and extract text
for (file in pdf_files) {
# Extract text from the current PDF file
text <- pdf_text(file)
# Store the extracted text in the list
pdf_texts[[file]] <- text
}
# Optionally, you can inspect the extracted text from the first PDF
print(pdf_texts[[1]])
# Combine text from all PDFs into a single data frame
pdf_text_df <- data.frame(
file_name = names(pdf_texts),
text = sapply(pdf_texts, paste, collapse = "\n"),
stringsAsFactors = FALSE
)
# Check the first few rows of the data frame
head(pdf_text_df)
# Check the first few rows of the data frame
head(pdf_text_df)
# Example: Combine all pages into one string for each PDF
combined_text <- sapply(pdf_texts, function(text) paste(text, collapse = "\n"))
# Create a data frame with the combined text
pdf_text_df <- data.frame(
file_name = names(pdf_texts),
text = combined_text,
stringsAsFactors = FALSE
)
# Check the data frame
head(pdf_text_df)
View(pdf_text_df)
